{"version":3,"sources":["components/ExplanationModal.js","components/FooterBar.js","functions/useDidUpdate.js","components/DayButton.js","components/DayButtonGrid.js","services/storage.js","Game.js","functions/useHighScoreState.js","App.js","serviceWorker.js","index.js"],"names":["centuryIndexMap","18","19","20","21","doomsdaysForMonth","1","2","3","4","5","6","7","8","9","10","11","12","doomsdaysForMonthInLeapYear","ExplanationModal","props","day","moment","currentDay","centuryIndex","format","substring","year","Number","yearAfter1Step","yearAfter2Step","yearAfter3Step","nearestMultiple","weekDay","doomsday","isLeapYear","concat","dayNumber","doomsdayNumber","doomsdayToDayChain","Math","abs","push","length","React","createElement","Box","direction","margin","Heading","alignSelf","className","Text","bottom","Tip","content","style","backgroundColor","color","padding","borderRadius","dropProps","align","top","textDecoration","pad","horizontal","vertical","Fragment","Object","entries","map","_ref","month","key","date","index","FooterBar","fullyHidden","setFullyHidden","useState","showExplanation","setShowExplanation","callback","deps","hasMount","useRef","useEffect","current","useDidUpdate","isVisible","justify","right","left","animation","type","duration","Button","label","onClick","visibility","Layer","onEsc","onClickOutside","responsive","full","onContinueClick","DayButton","anySelected","undefined","selectedDayOfWeek","isSelectedButFalse","expectedDayOfWeek","number","isCorrect","flex","grow","basis","boxShadow","background","setSelectedDayOfWeek","size","weekdays","DayButtonGrid","selected","setSelected","expected","width","wrap","storage","getHighScore","localStorage","getItem","setHighScore","score","setItem","require","momentRandom","Game","generateRandomDay","endDate","startDate","parseDateToWeekDayNumber","initialDay","setCurrentDay","setScore","highScore","useHighScoreState","setExpectedDayOfWeek","timeLeft","setTimeLeft","timer","setTimeout","t","clearTimeout","fill","overflow","maxWidth","level","startNewRound","nextDay","GitHubButton","href","data-icon","data-show-count","aria-label","theme","global","font","family","App","Grommet","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2QAIA,MAAMA,EAAkB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7CC,EAAoB,CAAEC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,MAC/HC,EAA8B,IAAKb,EAAmBC,EAAG,KAAMC,EAAG,MAEzD,SAASY,EAAiBC,GAEvC,IAAIC,EAAMC,EAAOF,EAAMG,YAEnBC,EAAexB,EAAgBqB,EAAII,OAAO,KAAKC,UAAU,EAAG,IAC5DC,EAAOC,OAAOP,EAAII,OAAO,OACzBI,EAAiBF,EAAO,IAAM,EAAKA,EAAO,GAAMA,EAChDG,EAAiBD,EAAiB,EAClCE,EAAiBD,EAAiB,IAAM,EAAIA,EAAiB,GAAKA,EAClEE,EAAkBD,EAAiB,IAAM,EAAIA,EAAiBA,EAAiB,EAAKA,EAAiB,EACrGE,GAAWD,EAAkBD,EAAiBP,GAAgB,EAC9DU,EAAWb,EAAIc,aAAY,GAAAC,OAC1Bf,EAAII,OAAO,QAAMW,OAAGlB,EAA4BG,EAAII,OAAO,OAAK,GAAAW,OAChEf,EAAII,OAAO,QAAMW,OAAG/B,EAAkBgB,EAAII,OAAO,OAElDY,EAAYT,OAAOP,EAAII,OAAO,MAC9Ba,EAAiBV,OAAOM,EAASR,UAAU,IAC3Ca,EAAqB,GAEzB,KAAOC,KAAKC,IAAIJ,EAAYC,GAAkB,GAC5CC,EAAmBG,KAAI,GAAAN,OAAIf,EAAII,OAAO,QAAMW,OAAGE,EAAiB,GAAE,IAAAF,OAAOE,GAAmBA,IACxFA,EAAiBD,EAAWC,GAAkB,EAC7CA,GAAkB,EAMzB,OAJIC,EAAmBI,OAAS,GAC9BJ,EAAmBG,KAAI,GAAAN,OAAIf,EAAII,OAAO,QAAMW,OAAGE,EAAiB,GAAE,IAAAF,OAAOE,GAAmBA,IAGvFM,IAAAC,cAACC,IAAG,CAACC,UAAW,SAAUC,OAAQ,UACvCJ,IAAAC,cAACI,IAAO,CAACC,UAAW,UAClBN,IAAAC,cAAA,QAAMM,UAAW,WAAY9B,EAAII,OAAO,KAAKC,UAAU,EAAG,IAC1DkB,IAAAC,cAAA,QAAMM,UAAW,QAAS9B,EAAII,OAAO,OAAa,IAClDmB,IAAAC,cAAA,QAAMM,UAAW,SAAU9B,EAAII,OAAO,OAAa,IACnDmB,IAAAC,cAAA,QAAMM,UAAW,OAAQ9B,EAAII,OAAO,QAEtCmB,IAAAC,cAACO,IAAI,CAACJ,OAAQ,CAAEK,OAAQ,WACtBT,IAAAC,cAACS,IAAG,CACFC,QACEX,IAAAC,cAAA,OAAKW,MAAO,CAAEC,gBAAiB,QAASC,MAAO,QAASC,QAAS,OAAQC,aAAc,QACrFhB,IAAAC,cAAA,SAAG,YACHD,IAAAC,cAAA,SAAG,YACHD,IAAAC,cAAA,SAAG,YACHD,IAAAC,cAAA,SAAG,aAGPgB,UAAW,CAAEC,MAAO,CAAEC,IAAK,YAE3BnB,IAAAC,cAAA,KAAGW,MAAO,CAAEQ,eAAgB,cAAe,kBACvC,YAASpB,IAAAC,cAAA,KAAGM,UAAW,WAAY9B,EAAII,OAAO,KAAKC,UAAU,EAAG,IAAO,UAAOkB,IAAAC,cAAA,KAAGM,UAAW,gBAAiB3B,GAAiB,KAEtIoB,IAAAC,cAACO,IAAI,KAAC,uCACgCR,IAAAC,cAAA,KAAGM,UAAW,QAAS9B,EAAII,OAAO,OAAU,UAAOmB,IAAAC,cAACS,IAAG,CACzFC,QACEX,IAAAC,cAAA,OAAKW,MAAO,CAAEC,gBAAiB,QAASC,MAAO,QAASC,QAAS,OAAQC,aAAc,QACrFhB,IAAAC,cAAA,SAAG,qBACHD,IAAAC,cAAA,SAAG,kBACHD,IAAAC,cAAA,SAAG,sBAGPgB,UAAW,CAAEC,MAAO,CAAEC,IAAK,YAC5BnB,IAAAC,cAAA,KAAGW,MAAO,CAAEQ,eAAgB,cAAe,eACtC,YAERpB,IAAAC,cAACC,IAAG,CAACmB,IAAK,CAAEC,WAAY,SAAUC,SAAU,UAAYnB,OAAQ,CAAEK,OAAQ,WACvE1B,IAASE,GACRe,IAAAC,cAACO,IAAI,KAAEzB,EAAK,uBAAqBA,EAAK,WAASE,EAAe,KAEhEe,IAAAC,cAACO,IAAI,KAAEvB,EAAe,4BAA0BA,EAAe,UAAQC,IAAmBC,EAAiBa,IAAAC,cAAAD,IAAAwB,SAAA,KAAExB,IAAAC,cAAA,KAAGM,UAAW,aAAcrB,GAAmB,KAAI,GAAAM,OAAMN,EAAc,MACnLA,IAAmBC,GAClBa,IAAAC,cAACO,IAAI,KAAEtB,EAAe,uBAAqBA,EAAe,WAAQc,IAAAC,cAAA,KAAGM,UAAW,aAAcpB,GAAmB,MAGrHa,IAAAC,cAACO,IAAI,KAAC,uCAAoCR,IAAAC,cAAA,KAAGM,UAAW,aAAcpB,GAAmB,OAAIa,IAAAC,cAAA,KAAGM,UAAW,mBAAoBnB,GAAoB,KACnJY,IAAAC,cAACO,IAAI,CAACJ,OAAQ,CAAEK,OAAQ,WAAY,6CAA0CT,IAAAC,cAAA,KAAGM,UAAW,mBAAoBnB,GAAoB,MAAGY,IAAAC,cAAA,KAAGM,UAAW,aAAcpB,GAAmB,MAAGa,IAAAC,cAAA,KAAGM,UAAW,gBAAiB3B,GAAiB,aAAUoB,IAAAC,cAAA,KAAGM,UAAW,mBAAoBlB,GAAY,IAACW,IAAAC,cAAA,SAAG,IAAEvB,WAAgBW,GAAS,KAAK,KACrUW,IAAAC,cAACO,IAAI,KACHR,IAAAC,cAACS,IAAG,CACFC,QACEX,IAAAC,cAAA,OAAKW,MAAO,CAAEC,gBAAiB,QAASC,MAAO,QAASC,QAAS,OAAQC,aAAc,QACrFhB,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,cAGRD,IAAAC,cAAA,aACGwB,OAAOC,QAAQjE,GAAmBkE,IAAIC,IAAA,IAAEC,EAAOvC,GAASsC,EAAA,OACvD5B,IAAAC,cAAA,MAAI6B,IAAKD,GACP7B,IAAAC,cAAA,UAAK4B,GACL7B,IAAAC,cAAA,UAAKX,EAAS,IAAY,MAAVuC,GAAiB,qBAAqB,IAAY,MAAVA,GAAiB,4BAOrFZ,UAAW,CAAEC,MAAO,CAAET,OAAQ,SAE9BT,IAAAC,cAAA,KAAGW,MAAO,CAAEQ,eAAgB,cAAe,aACvC,QAAM3C,EAAII,OAAO,QAAQ,OAAImB,IAAAC,cAAA,SAAIX,EAASR,UAAU,EAAG,IAAOkB,IAAAC,cAAA,KAAGM,UAAyC,IAA9BZ,EAAmBI,OAAe,WAAa,IAAKT,EAASR,UAAU,IAAQL,EAAIc,cAAiBd,EAAII,OAAO,KAAO,GAAMmB,IAAAC,cAAA,SAAG,gBAAiB,KAEnON,EAAmBI,OAAS,GAAKC,IAAAC,cAAAD,IAAAwB,SAAA,KAChCxB,IAAAC,cAACO,IAAI,KAAC,4CACNR,IAAAC,cAACC,IAAG,CAACmB,IAAK,CAAEC,WAAY,SAAUC,SAAU,WAC1CvB,IAAAC,cAACO,IAAI,KACFb,EAAmBgC,IAAI,CAACI,EAAMC,IACzBA,IAAUrC,EAAmBI,OAAS,EAAUC,IAAAC,cAACuB,WAAQ,CAACM,IAAKE,GAAOhC,IAAAC,cAAA,SAAI8B,EAAKjD,UAAU,EAAG,IAAOkB,IAAAC,cAAA,KAAGM,UAAW,YAAawB,EAAKjD,UAAU,IAAO,KACxJ,GAAAU,OAAUuC,EAAI,YAMrBrC,IAAmBD,EAClBO,IAAAC,cAACO,IAAI,KAAC,4CAAyCR,IAAAC,cAAA,SAAIxB,EAAII,OAAO,SAAY,KAC1EmB,IAAAC,cAACO,IAAI,KAAC,qCAAkCR,IAAAC,cAAA,KAAGM,UAAW,mBAAoBlB,GAAY,IAAEI,EAAYC,EAClGM,IAAAC,cAAAD,IAAAwB,SAAA,KAAE,OAAIxB,IAAAC,cAAA,KAAGM,UAAW,OAAQd,GAAc,MAAGO,IAAAC,cAAA,KAAGM,UAAW,YAAab,GAAmB,KAC3FM,IAAAC,cAAAD,IAAAwB,SAAA,KAAE,OAAIxB,IAAAC,cAAA,KAAGM,UAAW,YAAab,GAAmB,MAAGM,IAAAC,cAAA,KAAGM,UAAW,OAAQd,GAAc,KAC5F,aAAUO,IAAAC,cAAA,SAAIxB,EAAII,OAAO,KAAK,KAAGJ,EAAII,OAAO,QAAQ,KAAK,MCzHjD,SAASoD,EAAUzD,GAEhC,MAAO0D,EAAaC,GAAkBC,oBAAS,IACxCC,EAAiBC,GAAsBtC,IAAMoC,UAAS,GAM7D,OCZa,SAAuBG,EAAUC,GAC9C,MAAMC,EAAWC,kBAAO,GAExBC,oBAAU,KACJF,EAASG,QACXL,IAEAE,EAASG,SAAU,GAEpBJ,GDDHK,CAAa,KACXV,GAAe,IACd,CAAC3D,EAAMsE,YAEH9C,IAAAC,cAACC,IAAG,CACT4B,IAAKtD,EAAMsE,UACX3C,UAAW,MACX4C,QAAS,UACT3C,OAAQ,CAACK,OAAQ,QAASuC,MAAO,QAASC,KAAM,SAChDC,UAAW1E,EAAMsE,UAAY,CAACK,KAAQ,UAAY,CAACA,KAAQ,UAAWC,SAAY,MAElFpD,IAAAC,cAACoD,IAAM,CACHC,MAAO,cACPC,QAAS/E,EAAMsE,UAAY,IAAMR,GAAmB,GAAQ,OAC5D1B,MAAO,CAAC4C,WAAatB,EAAc,SAAW,aAEjDG,GACGrC,IAAAC,cAACwD,IAAK,CACFC,MAAOA,IAAMpB,GAAmB,GAChCqB,eAAgBA,IAAMrB,GAAmB,GACzClC,OAAQ,SACRG,UAAW,QACXqD,YAAY,EACZC,KAAK,cAEP7D,IAAAC,cAAC1B,EAAgB,CAACI,WAAYH,EAAMG,cAG1CqB,IAAAC,cAACoD,IAAM,CACLC,MAAO,WACPC,QAAS/E,EAAMsE,UAAYtE,EAAMsF,gBAAkB,OACnDlD,MAAO,CAAC4C,WAAatB,EAAc,SAAW,cErCrC,SAAS6B,EAAUvF,GAEhC,MAAMwF,OAA0CC,IAA5BzF,EAAM0F,kBAEpBC,EAAsBH,GAC1BxF,EAAM0F,oBAAsB1F,EAAM4F,mBAClC5F,EAAM6F,SAAW7F,EAAM0F,kBAEnBI,EAAYN,GAChBxF,EAAM6F,SAAW7F,EAAM4F,kBAEzB,YAAwBH,IAAjBzF,EAAM6F,OACXrE,IAAAC,cAACC,IAAG,CACFqE,KAAM,CAACC,KAAQ,GACfC,MAAO,UACPvD,MAAO,SACP6B,QAAS,SACTnC,MAAO,CAAC8D,UAAW,QACnBxB,UAAYiB,GAAsBG,EAAa,CAACnB,KAAQ,SAAUC,SAAY,KAAO,GACrFuB,WAAYR,EAAqB,eAAkBG,EAAY,YAAc,GAC7Ef,QAASA,KACFS,GAAaxF,EAAMoG,qBAAqBpG,EAAM6F,UAGrDrE,IAAAC,cAACO,IAAI,CAACqE,KAAM,SAAUnG,IAAOoG,SAAStG,EAAM6F,UAE9CrE,IAAAC,cAACC,IAAG,CACFqE,KAAM,CAACC,KAAQ,GACfC,MAAO,YC5BE,SAASM,EAAcvG,GAEpC,IAAIwG,EAAWxG,EAAM0F,kBACjBe,EAAczG,EAAMoG,qBACpBM,EAAW1G,EAAM4F,kBAErB,OAAOpE,IAAAC,cAACC,IAAG,CACTqE,KAAM,CAACC,KAAM,GACbrE,UAAW,SACX4C,QAAS,SACTzC,UAAW,SACXM,MAAO,CAACuE,MAAO,SAEfnF,IAAAC,cAACC,IAAG,CACFqE,KAAM,OACNpE,UAAW,MACXe,MAAO,UACPkE,MAAM,GAENpF,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,IACzGlF,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,IACzGlF,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,KAE3GlF,IAAAC,cAACC,IAAG,CACFqE,KAAM,OACNpE,UAAW,MACXe,MAAO,UACPkE,MAAM,GAENpF,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,IACzGlF,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,IACzGlF,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,KAE3GlF,IAAAC,cAACC,IAAG,CACFqE,KAAM,OACNpE,UAAW,MACXe,MAAO,UACPkE,MAAM,GAENpF,IAAAC,cAAC8D,EAAS,MACV/D,IAAAC,cAAC8D,EAAS,CAACM,OAAQ,EAAGH,kBAAmBc,EAAUJ,qBAAsBK,EAAab,kBAAmBc,IACzGlF,IAAAC,cAAC8D,EAAS,QC7ChB,MAKasB,EAAU,CACrBC,aANmBA,IAAMC,aAAaC,QAAQ,cAAgB,EAO9DC,aANoBC,IACpBH,aAAaI,QAAQ,YAAaD,iBCIpC,MAAMhH,EAASkH,EAAQ,IACjBC,EAAeD,EAAQ,IAuFdE,MArFf,SAActH,GAEZ,MAAMuH,EAAoBA,IAAMF,EAC9BnH,EAAOF,EAAMwH,SACbtH,EAAOF,EAAMyH,YAGTC,EAA4BnE,GAAS/C,OAAO+C,EAAKlD,OAAO,MAE9D,IAAIsH,EAAaJ,IACjB,MAAOpH,EAAYyH,GAAiBhE,mBAAS+D,EAAWtH,OAAO,aACxD6G,EAAOW,GAAYjE,mBAAS,IAC5BkE,EAAWb,GClBb,WACL,MAAOa,EAAWb,GAAgBrD,mBAASiD,EAAQC,gBAMnD,OAJA3C,oBAAU,KACR0C,EAAQI,aAAaa,IACpB,CAACA,IAEG,CAACA,EAAWb,GDWec,IAC3BrC,EAAmBU,GAAwBxC,sBAC3CgC,EAAmBoC,GAAwBpE,mBAAS8D,EAAyBC,KAC7EM,EAAUC,GAAetE,mBAAS,IACzC,IAAIuE,EAAQjE,mBA0BZ,OAxBAC,oBAAU,KACJ8D,EAAW,QAA2BxC,IAAtBC,EAClByC,EAAM/D,QAAUgE,WAAW,KACzBF,EAAYG,GAAKA,EAAI,IACpB,KAEHC,aAAaH,EAAM/D,UAEpB,CAAC6D,EAAUvC,IAiBVlE,IAAAC,cAACC,IAAG,CAAC6G,MAAI,EAACpC,WAAY,QAASxE,UAAW,SAAU6G,SAAU,UAC5DhH,IAAAC,cAACC,IAAG,CAACC,UAAW,SAAUoE,KAAM,OAAQ3D,MAAO,CAACqG,SAAU,IAAK9B,MAAO,QAAS7E,UAAW,UACxFN,IAAAC,cAACC,IAAG,CACFC,UAAW,MACX4C,QAAS,UACT3C,OAAQ,CAACe,IAAK,SAAU6B,MAAO,SAAUC,KAAM,WAE/CjD,IAAAC,cAACO,IAAI,CAACqE,KAAM,UAAU,cAAYyB,GAClCtG,IAAAC,cAACO,IAAI,CAACqE,KAAM,UAAU,UAAQa,IAEhC1F,IAAAC,cAACC,IAAG,CACF4B,IAAKnD,EACL4F,KAAM,CAACC,KAAM,GACbtD,MAAO,SACP6B,QAAS,SACTG,UAAW,CAACC,KAAO,WAEnBnD,IAAAC,cAACC,IAAG,CAACgD,UAAYuD,GAAY,GAAKA,EAAW,EAAK,CAACtD,KAAM,QAAS0B,KAAM,QAASzB,SAAU,KAAO,GAAImB,KAAM,CAACC,KAAM,IACjHxE,IAAAC,cAACI,IAAO,CAACwE,KAAM,QAASqC,MAAO,IAAKpG,MAAoB,IAAb2F,GAAkB,kBAC1DA,IAGLzG,IAAAC,cAACC,IAAG,CAACqE,KAAM,CAACC,KAAM,IAChBxE,IAAAC,cAACI,IAAO,CAACwE,KAAM,QAASqC,MAAO,KAC5BvI,KAIPqB,IAAAC,cAAC8E,EAAa,CAACb,kBAAmBA,EAAmBU,qBAAsBA,EAAsBR,kBAAmBA,IACpHpE,IAAAC,cAACgC,EAAS,CAAC6B,gBA5CGqD,KACpB,IAAIC,EAAUrB,IACdK,EAAcgB,EAAQvI,OAAO,YACzBqF,IAAsBE,GAAqBqC,EAAW,GACxDJ,EAASX,GAASA,EAAQ,GACtBA,EAAQ,EAAIY,GAAWb,EAAaC,EAAQ,IAEhDW,EAAS,GAEXzB,OAAqBX,GACrBuC,EAAqBN,EAAyBkB,IAC9CV,EAAY,KAiCqC5D,eAAiCmB,IAAtBC,EAAiCvF,WAAYA,IACnGqB,IAAAC,cAACC,IAAG,CACAC,UAAW,MACX4C,QAAS,MACT3C,OAAQ,CAAC4C,MAAO,QAASC,KAAM,UAEjCjD,IAAAC,cAACoH,IAAY,CAACC,KAAK,2DAA2DC,YAAU,eAAeC,kBAAgB,OAAOC,aAAW,qBAAoB,kBEnFzK,MAAMC,EAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,YAcCC,MATf,WAEE,OACE9H,IAAAC,cAAC8H,IAAO,CAACL,MAAOA,EAAO7D,MAAI,GAC1B7D,IAAAC,cAAC6F,EAAI,CAACG,UAAW,aAAcD,QAAS,iBCJ7C,MAAMgC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAKC,IACJA,EAAaC,cAAgB,MAC3B,MAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,MACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,YAO5BW,MAAMC,IACLL,QAAQK,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAO3J,IAAAC,cAAC6H,EAAG,MAAK8B,SAASC,eAAe,SDiB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,+BAAwB7B,OAAOC,SAASb,MACpD0C,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,KAC9B,MAAM1B,EAAK,GAAA/I,OAAMuK,+BAAsB,sBAEnC/B,GAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,GACHK,KAAKuB,IAEJ,MAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,KAAKC,IACjCA,EAAa6B,aAAa9B,KAAK,KAC7BV,OAAOC,SAASwC,aAKpBrC,EAAgBC,EAAOC,KAG1BgB,MAAM,KACLJ,QAAQC,IACN,mEArFAuB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,KACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,MCxC/BE","file":"static/js/main.e3d09fee.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Box, Heading, Text, Tip } from \"grommet\";\nimport * as moment from \"moment\";\n\nconst centuryIndexMap = { 18: 5, 19: 3, 20: 2, 21: 0 };\nconst doomsdaysForMonth = { 1: \"03\", 2: \"14\", 3: \"07\", 4: \"04\", 5: \"09\", 6: \"06\", 7: \"11\", 8: \"08\", 9: \"05\", 10: \"10\", 11: \"07\", 12: \"12\" };\nconst doomsdaysForMonthInLeapYear = { ...doomsdaysForMonth, 1: \"04\", 2: \"15\" };\n\nexport default function ExplanationModal(props) {\n\n  let day = moment(props.currentDay);\n\n  let centuryIndex = centuryIndexMap[day.format(\"Y\").substring(0, 2)];\n  let year = Number(day.format(\"YY\"));\n  let yearAfter1Step = year % 2 === 1 ? (year + 11) : year;\n  let yearAfter2Step = yearAfter1Step / 2;\n  let yearAfter3Step = yearAfter2Step % 2 === 1 ? yearAfter2Step + 11 : yearAfter2Step;\n  let nearestMultiple = yearAfter3Step % 7 === 0 ? yearAfter3Step : yearAfter3Step + 7 - (yearAfter3Step % 7);\n  let weekDay = (nearestMultiple - yearAfter3Step + centuryIndex) % 7;\n  let doomsday = day.isLeapYear() ?\n    `${day.format(\"MM-\")}${doomsdaysForMonthInLeapYear[day.format(\"M\")]}` :\n    `${day.format(\"MM-\")}${doomsdaysForMonth[day.format(\"M\")]}`;\n\n  let dayNumber = Number(day.format(\"D\"));\n  let doomsdayNumber = Number(doomsday.substring(3));\n  let doomsdayToDayChain = [];\n\n  while (Math.abs(dayNumber - doomsdayNumber) > 6) {\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\n    if (doomsdayNumber < dayNumber) doomsdayNumber += 7;\n    else doomsdayNumber -= 7;\n  }\n  if (doomsdayToDayChain.length > 0) {\n    doomsdayToDayChain.push(`${day.format(\"MM-\")}${doomsdayNumber < 10 ? `0${doomsdayNumber}` : doomsdayNumber}`);\n  }\n\n  return <Box direction={\"column\"} margin={\"medium\"}>\n    <Heading alignSelf={\"center\"}>\n      <span className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</span>\n      <span className={\"year\"}>{day.format(\"YY\")}</span>-\n      <span className={\"month\"}>{day.format(\"MM\")}</span>-\n      <span className={\"day\"}>{day.format(\"DD\")}</span>\n    </Heading>\n    <Text margin={{ bottom: \"xsmall\" }}>\n      <Tip\n        content={\n          <div style={{ backgroundColor: 'white', color: 'black', padding: '10px', borderRadius: '4px' }}>\n            <p>1800s: 5</p>\n            <p>1900s: 3</p>\n            <p>2000s: 2</p>\n            <p>2100s: 0</p>\n          </div>\n        }\n        dropProps={{ align: { top: 'bottom' } }}\n      >\n        <b style={{ textDecoration: 'underline' }}>Century index</b>\n      </Tip> for the <b className={\"century\"}>{day.format(\"Y\").substring(0, 2)}</b>00s is <b className={\"centuryIndex\"}>{centuryIndex}</b>.\n    </Text>\n    <Text>\n      Calculating the year index for year <b className={\"year\"}>{day.format(\"YY\")}</b> using <Tip\n        content={\n          <div style={{ backgroundColor: 'white', color: 'black', padding: '10px', borderRadius: '4px' }}>\n            <p>1. If odd, add 11</p>\n            <p>2. Divide by 2</p>\n            <p>3. If odd, add 11</p>\n          </div>\n        }\n        dropProps={{ align: { top: 'bottom' } }}\n      ><b style={{ textDecoration: 'underline' }}>\"odd + 11\"</b>\n      </Tip> method:\n    </Text>\n    <Box pad={{ horizontal: \"medium\", vertical: 'xsmall' }} margin={{ bottom: \"xsmall\" }}>\n      {year !== yearAfter1Step &&\n        <Text>{year} is odd, adding 11: {year} + 11 = {yearAfter1Step};</Text>\n      }\n      <Text>{yearAfter1Step} is even, dividing by 2: {yearAfter1Step} / 2 = {yearAfter2Step === yearAfter3Step ? <><b className={\"yearIndex\"}>{yearAfter2Step}</b>.</> : `${yearAfter2Step};`}</Text>\n      {yearAfter2Step !== yearAfter3Step &&\n        <Text>{yearAfter2Step} is odd, adding 11: {yearAfter2Step} + 11 = <b className={\"yearIndex\"}>{yearAfter3Step}</b>.</Text>\n      }\n    </Box>\n    <Text>The nearest higher multiple of 7 to <b className={\"yearIndex\"}>{yearAfter3Step}</b> is <b className={\"nearestMultiple\"}>{nearestMultiple}</b>.</Text>\n    <Text margin={{ bottom: \"xsmall\" }}>Calculating the weekday of the doomsday: (<b className={\"nearestMultiple\"}>{nearestMultiple}</b> - <b className={\"yearIndex\"}>{yearAfter3Step}</b> + <b className={\"centuryIndex\"}>{centuryIndex}</b>) mod 7 = <b className={\"doomsdayWeekDay\"}>{weekDay}</b> <b>({moment.weekdays(weekDay)})</b>.</Text>\n    <Text>\n      <Tip\n        content={\n          <div style={{ backgroundColor: 'white', color: 'black', padding: '10px', borderRadius: '4px' }}>\n            <table>\n              <thead>\n                <tr>\n                  <th>Month</th>\n                  <th>Doomsday</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.entries(doomsdaysForMonth).map(([month, doomsday]) => (\n                  <tr key={month}>\n                    <td>{month}</td>\n                    <td>{doomsday} {month === '1' && '(04 on leap years)'} {month === '2' && '(15 on leap years)'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        }\n        dropProps={{ align: { bottom: 'top' } }}\n      >\n        <b style={{ textDecoration: 'underline' }}>Doomsday</b>\n      </Tip> for {day.format(\"MMMM\")} is <b>{doomsday.substring(0, 3)}</b><b className={doomsdayToDayChain.length === 0 ? \"doomsday\" : \"\"}>{doomsday.substring(3)}</b>{day.isLeapYear() && (day.format(\"M\") < 3) && <b> (leap year)</b>}.\n    </Text>\n    {doomsdayToDayChain.length > 0 && <>\n      <Text>Selecting a doomsday closer to our date:</Text>\n      <Box pad={{ horizontal: \"medium\", vertical: 'xsmall' }}>\n        <Text>\n          {doomsdayToDayChain.map((date, index) => {\n            if (index === doomsdayToDayChain.length - 1) return <Fragment key={index}><b>{date.substring(0, 3)}</b><b className={\"doomsday\"}>{date.substring(3)}</b>.</Fragment>;\n            return `${date} -> `\n          })}\n        </Text>\n      </Box>\n    </>\n    }\n    {doomsdayNumber === dayNumber ?\n      <Text>Our date matches the doomsday, and it is <b>{day.format(\"dddd\")}</b>.</Text> :\n      <Text>Calculating the day of the week: (<b className={\"doomsdayWeekDay\"}>{weekDay}</b> {dayNumber > doomsdayNumber ?\n        <> + (<b className={\"day\"}>{dayNumber}</b> - <b className={\"doomsday\"}>{doomsdayNumber}</b>)</> :\n        <> - (<b className={\"doomsday\"}>{doomsdayNumber}</b> - <b className={\"day\"}>{dayNumber}</b>)</>\n      }) mod 7 = <b>{day.format(\"d\")} ({day.format(\"dddd\")})</b>.</Text>\n    }\n  </Box>\n}","import React, {useState} from 'react';\nimport {Box, Button, Layer} from \"grommet\";\nimport useDidUpdate from \"../functions/useDidUpdate\";\nimport ExplanationModal from \"./ExplanationModal\";\n\nexport default function FooterBar(props) {\n\n  const [fullyHidden, setFullyHidden] = useState(true);\n  const [showExplanation, setShowExplanation] = React.useState(false);\n\n  useDidUpdate(() => {\n    setFullyHidden(false)\n  }, [props.isVisible]);\n\n  return <Box\n    key={props.isVisible}\n    direction={\"row\"}\n    justify={\"between\"}\n    margin={{bottom: \"small\", right: \"large\", left: \"large\"}}\n    animation={props.isVisible ? {\"type\": \"fadeIn\"} : {\"type\": \"fadeOut\", \"duration\": 200}}\n  >\n    <Button\n        label={\"Explanation\"}\n        onClick={props.isVisible ? () => setShowExplanation(true) : () => {}}\n        style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\n    />\n    {showExplanation && (\n        <Layer\n            onEsc={() => setShowExplanation(false)}\n            onClickOutside={() => setShowExplanation(false)}\n            margin={\"medium\"}\n            className={\"modal\"}\n            responsive={false}\n            full=\"horizontal\"\n        >\n          <ExplanationModal currentDay={props.currentDay}/>\n        </Layer>\n    )}\n    <Button\n      label={\"Continue\"}\n      onClick={props.isVisible ? props.onContinueClick : () => {}}\n      style={{visibility: (fullyHidden ? \"hidden\" : \"visible\")}}\n    />\n  </Box>\n}\n","import {useEffect, useRef} from 'react';\n\nexport default function useDidUpdate (callback, deps) {\n  const hasMount = useRef(false);\n\n  useEffect(() => {\n    if (hasMount.current) {\n      callback()\n    } else {\n      hasMount.current = true\n    }\n  }, deps)\n}\n","import {Box, Text} from \"grommet\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nexport default function DayButton(props) {\n\n  const anySelected = props.selectedDayOfWeek !== undefined;\n\n  const isSelectedButFalse =  anySelected &&\n    props.selectedDayOfWeek !== props.expectedDayOfWeek &&\n    props.number === props.selectedDayOfWeek;\n\n  const isCorrect = anySelected &&\n    props.number === props.expectedDayOfWeek;\n\n  return props.number !== undefined ?\n    <Box\n      flex={{'grow': 1}}\n      basis={'xxsmall'}\n      align={'center'}\n      justify={'center'}\n      style={{boxShadow: \"none\"}}\n      animation={(isSelectedButFalse || isCorrect) ? {\"type\": \"zoomIn\", \"duration\": 400} : {}}\n      background={isSelectedButFalse ? 'status-error' : (isCorrect ? 'status-ok' : \"\")}\n      onClick={() => {\n        if (!anySelected) props.setSelectedDayOfWeek(props.number)\n      }}\n    >\n      <Text size={\"large\"}>{moment.weekdays(props.number)}</Text>\n    </Box> :\n    <Box\n      flex={{'grow': 1}}\n      basis={'xxsmall'}\n    />;\n}\n","import {Box} from \"grommet\";\nimport DayButton from \"./DayButton\";\nimport React from \"react\";\n\nexport default function DayButtonGrid(props) {\n\n  let selected = props.selectedDayOfWeek;\n  let setSelected = props.setSelectedDayOfWeek;\n  let expected = props.expectedDayOfWeek;\n\n  return <Box\n    flex={{grow: 2}}\n    direction={'column'}\n    justify={'center'}\n    alignSelf={'center'}\n    style={{width: \"100%\"}}\n  >\n    <Box\n      flex={'grow'}\n      direction={\"row\"}\n      align={'stretch'}\n      wrap={true}\n    >\n      <DayButton number={1} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n      <DayButton number={2} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n      <DayButton number={3} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n    </Box>\n    <Box\n      flex={'grow'}\n      direction={\"row\"}\n      align={'stretch'}\n      wrap={true}\n    >\n      <DayButton number={4} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n      <DayButton number={5} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n      <DayButton number={6} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n    </Box>\n    <Box\n      flex={'grow'}\n      direction={\"row\"}\n      align={'stretch'}\n      wrap={true}\n    >\n      <DayButton />\n      <DayButton number={0} selectedDayOfWeek={selected} setSelectedDayOfWeek={setSelected} expectedDayOfWeek={expected}/>\n      <DayButton />\n    </Box>\n  </Box>\n}\n","const getHighScore = () => localStorage.getItem('highScore') || 0;\nconst setHighScore = (score) => {\n  localStorage.setItem('highScore', score)\n};\n\nexport const storage = {\n  getHighScore,\n  setHighScore\n};","import React, {useEffect, useRef, useState} from 'react';\nimport {Box, Heading, Text} from 'grommet';\nimport FooterBar from \"./components/FooterBar\";\nimport DayButtonGrid from \"./components/DayButtonGrid\";\nimport {useHighScoreState} from \"./functions/useHighScoreState\";\nimport GitHubButton from 'react-github-btn'\nconst moment = require('moment');\nconst momentRandom = require('moment-random');\n\nfunction Game(props) {\n\n  const generateRandomDay = () => momentRandom(\n    moment(props.endDate),\n    moment(props.startDate)\n  );\n\n  const parseDateToWeekDayNumber = (date) => Number(date.format('d'));\n\n  let initialDay = generateRandomDay();\n  const [currentDay, setCurrentDay] = useState(initialDay.format(\"Y-MM-DD\"));\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useHighScoreState();\n  const [selectedDayOfWeek, setSelectedDayOfWeek] = useState();\n  const [expectedDayOfWeek, setExpectedDayOfWeek] = useState(parseDateToWeekDayNumber(initialDay));\n  const [timeLeft, setTimeLeft] = useState(10);\n  let timer = useRef();\n\n  useEffect(() => {\n    if (timeLeft > 0 && selectedDayOfWeek === undefined) {\n      timer.current = setTimeout(() => {\n        setTimeLeft(t => t - 1)\n      }, 1000)\n    } else {\n      clearTimeout(timer.current)\n    }\n  }, [timeLeft, selectedDayOfWeek]);\n\n  const startNewRound = () => {\n    let nextDay = generateRandomDay();\n    setCurrentDay(nextDay.format(\"Y-MM-DD\"));\n    if (selectedDayOfWeek === expectedDayOfWeek && timeLeft > 0) {\n      setScore(score => score + 1);\n      if (score + 1 > highScore) setHighScore(score + 1);\n    } else {\n      setScore(0)\n    }\n    setSelectedDayOfWeek(undefined);\n    setExpectedDayOfWeek(parseDateToWeekDayNumber(nextDay));\n    setTimeLeft(10)\n  };\n\n  return (\n      <Box fill background={'brand'} direction={'column'} overflow={'hidden'}>\n        <Box direction={\"column\"} flex={\"grow\"} style={{maxWidth: 800, width: \"100%\"}} alignSelf={'center'}>\n          <Box\n            direction={\"row\"}\n            justify={\"between\"}\n            margin={{top: \"medium\", right: \"medium\", left: \"medium\"}}\n          >\n            <Text size={\"xlarge\"}>Highscore: {highScore}</Text>\n            <Text size={\"xlarge\"}>Score: {score}</Text>\n          </Box>\n          <Box\n            key={currentDay}\n            flex={{grow: 1}}\n            align={'center'}\n            justify={'center'}\n            animation={{\"type\":\"fadeIn\"}}\n          >\n            <Box animation={(timeLeft <= 3 && timeLeft > 0) ? {type: \"pulse\", size: \"large\", duration: 500} : {}} flex={{grow: 1}}>\n              <Heading size={\"large\"} level={'1'} color={timeLeft === 0 && 'status-warning'}>\n                {timeLeft}\n              </Heading>\n            </Box>\n            <Box flex={{grow: 4}}>\n              <Heading size={\"large\"} level={'1'}>\n                {currentDay}\n              </Heading>\n            </Box>\n          </Box>\n          <DayButtonGrid selectedDayOfWeek={selectedDayOfWeek} setSelectedDayOfWeek={setSelectedDayOfWeek} expectedDayOfWeek={expectedDayOfWeek}/>\n          <FooterBar onContinueClick={startNewRound} isVisible={selectedDayOfWeek !== undefined} currentDay={currentDay}/>\n          <Box\n              direction={\"row\"}\n              justify={\"end\"}\n              margin={{right: \"large\", left: \"large\"}}\n          >\n            <GitHubButton href=\"https://github.com/grantas33/Doomsday-algorithm-practice\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star me on GitHub\">Star</GitHubButton>\n          </Box>\n        </Box>\n      </Box>\n  );\n}\n\nexport default Game;\n","import { useState, useEffect } from 'react';\r\nimport {storage} from \"../services/storage\";\r\n\r\nexport function useHighScoreState() {\r\n  const [highScore, setHighScore] = useState(storage.getHighScore());\r\n\r\n  useEffect(() => {\r\n    storage.setHighScore(highScore)\r\n  }, [highScore]);\r\n\r\n  return [highScore, setHighScore];\r\n}","import React from 'react';\nimport {Grommet} from 'grommet';\nimport Game from \"./Game\";\nimport './App.css';\nconst theme = {\n  global: {\n    font: {\n      family: 'Solway'\n    }\n  },\n};\n\nfunction App() {\n\n  return (\n    <Grommet theme={theme} full>\n     <Game startDate={'1800-01-01'} endDate={'2199-12-31'}/>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}